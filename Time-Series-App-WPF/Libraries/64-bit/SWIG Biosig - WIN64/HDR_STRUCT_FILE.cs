//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BiosigLibWin64 {

public class HDR_STRUCT_FILE : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal HDR_STRUCT_FILE(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(HDR_STRUCT_FILE obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~HDR_STRUCT_FILE() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          biosigPINVOKE.delete_HDR_STRUCT_FILE(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_void gzFID {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_gzFID_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_FILE_gzFID_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FILE FID {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_FID_set(swigCPtr, SWIGTYPE_p_FILE.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_FILE_FID_get(swigCPtr);
      SWIGTYPE_p_FILE ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FILE(cPtr, false);
      return ret;
    } 
  }

  public uint size {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_size_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_FILE_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint POS {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_POS_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_FILE_POS_get(swigCPtr);
      return ret;
    } 
  }

  public int Des {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_Des_set(swigCPtr, value);
    } 
    get {
      int ret = biosigPINVOKE.HDR_STRUCT_FILE_Des_get(swigCPtr);
      return ret;
    } 
  }

  public int DES {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_DES_set(swigCPtr, value);
    } 
    get {
      int ret = biosigPINVOKE.HDR_STRUCT_FILE_DES_get(swigCPtr);
      return ret;
    } 
  }

  public byte OPEN {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_OPEN_set(swigCPtr, value);
    } 
    get {
      byte ret = biosigPINVOKE.HDR_STRUCT_FILE_OPEN_get(swigCPtr);
      return ret;
    } 
  }

  public byte LittleEndian {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_LittleEndian_set(swigCPtr, value);
    } 
    get {
      byte ret = biosigPINVOKE.HDR_STRUCT_FILE_LittleEndian_get(swigCPtr);
      return ret;
    } 
  }

  public byte COMPRESSION {
    set {
      biosigPINVOKE.HDR_STRUCT_FILE_COMPRESSION_set(swigCPtr, value);
    } 
    get {
      byte ret = biosigPINVOKE.HDR_STRUCT_FILE_COMPRESSION_get(swigCPtr);
      return ret;
    } 
  }

  public HDR_STRUCT_FILE() : this(biosigPINVOKE.new_HDR_STRUCT_FILE(), true) {
  }

}

}
