//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BiosigLibWin64 {

public class CHANNEL_TYPE : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CHANNEL_TYPE(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CHANNEL_TYPE obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CHANNEL_TYPE() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          biosigPINVOKE.delete_CHANNEL_TYPE(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public double PhysMin {
    set {
      biosigPINVOKE.CHANNEL_TYPE_PhysMin_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_PhysMin_get(swigCPtr);
      return ret;
    } 
  }

  public double PhysMax {
    set {
      biosigPINVOKE.CHANNEL_TYPE_PhysMax_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_PhysMax_get(swigCPtr);
      return ret;
    } 
  }

  public double DigMin {
    set {
      biosigPINVOKE.CHANNEL_TYPE_DigMin_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_DigMin_get(swigCPtr);
      return ret;
    } 
  }

  public double DigMax {
    set {
      biosigPINVOKE.CHANNEL_TYPE_DigMax_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_DigMax_get(swigCPtr);
      return ret;
    } 
  }

  public double Cal {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Cal_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_Cal_get(swigCPtr);
      return ret;
    } 
  }

  public double Off {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Off_set(swigCPtr, value);
    } 
    get {
      double ret = biosigPINVOKE.CHANNEL_TYPE_Off_get(swigCPtr);
      return ret;
    } 
  }

  public string Label {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Label_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.CHANNEL_TYPE_Label_get(swigCPtr);
      return ret;
    } 
  }

  public char OnOff {
    set {
      biosigPINVOKE.CHANNEL_TYPE_OnOff_set(swigCPtr, value);
    } 
    get {
      char ret = biosigPINVOKE.CHANNEL_TYPE_OnOff_get(swigCPtr);
      return ret;
    } 
  }

  public ushort LeadIdCode {
    set {
      biosigPINVOKE.CHANNEL_TYPE_LeadIdCode_set(swigCPtr, value);
    } 
    get {
      ushort ret = biosigPINVOKE.CHANNEL_TYPE_LeadIdCode_get(swigCPtr);
      return ret;
    } 
  }

  public string Transducer {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Transducer_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.CHANNEL_TYPE_Transducer_get(swigCPtr);
      return ret;
    } 
  }

  public ushort PhysDimCode {
    set {
      biosigPINVOKE.CHANNEL_TYPE_PhysDimCode_set(swigCPtr, value);
    } 
    get {
      ushort ret = biosigPINVOKE.CHANNEL_TYPE_PhysDimCode_get(swigCPtr);
      return ret;
    } 
  }

  public float TOffset {
    set {
      biosigPINVOKE.CHANNEL_TYPE_TOffset_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_TOffset_get(swigCPtr);
      return ret;
    } 
  }

  public float LowPass {
    set {
      biosigPINVOKE.CHANNEL_TYPE_LowPass_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_LowPass_get(swigCPtr);
      return ret;
    } 
  }

  public float HighPass {
    set {
      biosigPINVOKE.CHANNEL_TYPE_HighPass_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_HighPass_get(swigCPtr);
      return ret;
    } 
  }

  public float Notch {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Notch_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_Notch_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_float XYZ {
    set {
      biosigPINVOKE.CHANNEL_TYPE_XYZ_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.CHANNEL_TYPE_XYZ_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public float Impedance {
    set {
      biosigPINVOKE.CHANNEL_TYPE_Impedance_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_Impedance_get(swigCPtr);
      return ret;
    } 
  }

  public float fZ {
    set {
      biosigPINVOKE.CHANNEL_TYPE_fZ_set(swigCPtr, value);
    } 
    get {
      float ret = biosigPINVOKE.CHANNEL_TYPE_fZ_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char bufptr {
    set {
      biosigPINVOKE.CHANNEL_TYPE_bufptr_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.CHANNEL_TYPE_bufptr_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint SPR {
    set {
      biosigPINVOKE.CHANNEL_TYPE_SPR_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.CHANNEL_TYPE_SPR_get(swigCPtr);
      return ret;
    } 
  }

  public uint bi {
    set {
      biosigPINVOKE.CHANNEL_TYPE_bi_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.CHANNEL_TYPE_bi_get(swigCPtr);
      return ret;
    } 
  }

  public uint bi8 {
    set {
      biosigPINVOKE.CHANNEL_TYPE_bi8_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.CHANNEL_TYPE_bi8_get(swigCPtr);
      return ret;
    } 
  }

  public ushort GDFTYP {
    set {
      biosigPINVOKE.CHANNEL_TYPE_GDFTYP_set(swigCPtr, value);
    } 
    get {
      ushort ret = biosigPINVOKE.CHANNEL_TYPE_GDFTYP_get(swigCPtr);
      return ret;
    } 
  }

  public CHANNEL_TYPE() : this(biosigPINVOKE.new_CHANNEL_TYPE(), true) {
  }

}

}
