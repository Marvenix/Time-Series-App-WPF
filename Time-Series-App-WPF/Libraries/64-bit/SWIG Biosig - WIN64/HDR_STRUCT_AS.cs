//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BiosigLibWin64 {

public class HDR_STRUCT_AS : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal HDR_STRUCT_AS(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(HDR_STRUCT_AS obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~HDR_STRUCT_AS() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          biosigPINVOKE.delete_HDR_STRUCT_AS(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string B4C_ERRMSG {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_B4C_ERRMSG_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.HDR_STRUCT_AS_B4C_ERRMSG_get(swigCPtr);
      return ret;
    } 
  }

  public uint bpb {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_bpb_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_AS_bpb_get(swigCPtr);
      return ret;
    } 
  }

  public uint bpb8 {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_bpb8_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_AS_bpb8_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char Header {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_Header_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_AS_Header_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char rawEventData {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_rawEventData_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_AS_rawEventData_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char rawdata {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_rawdata_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_AS_rawdata_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint first {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_first_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_AS_first_get(swigCPtr);
      return ret;
    } 
  }

  public uint length {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_length_set(swigCPtr, value);
    } 
    get {
      uint ret = biosigPINVOKE.HDR_STRUCT_AS_length_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char auxBUF {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_auxBUF_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_AS_auxBUF_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public string bci2000 {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_bci2000_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.HDR_STRUCT_AS_bci2000_get(swigCPtr);
      return ret;
    } 
  }

  public string fpulse {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_fpulse_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.HDR_STRUCT_AS_fpulse_get(swigCPtr);
      return ret;
    } 
  }

  public string stimfit {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_stimfit_set(swigCPtr, value);
    } 
    get {
      string ret = biosigPINVOKE.HDR_STRUCT_AS_stimfit_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_int SegSel {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_SegSel_set(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = biosigPINVOKE.HDR_STRUCT_AS_SegSel_get(swigCPtr);
      SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
      return ret;
    } 
  }

  public B4C_ERROR B4C_ERRNUM {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_B4C_ERRNUM_set(swigCPtr, (int)value);
    } 
    get {
      B4C_ERROR ret = (B4C_ERROR)biosigPINVOKE.HDR_STRUCT_AS_B4C_ERRNUM_get(swigCPtr);
      return ret;
    } 
  }

  public char flag_collapsed_rawdata {
    set {
      biosigPINVOKE.HDR_STRUCT_AS_flag_collapsed_rawdata_set(swigCPtr, value);
    } 
    get {
      char ret = biosigPINVOKE.HDR_STRUCT_AS_flag_collapsed_rawdata_get(swigCPtr);
      return ret;
    } 
  }

  public HDR_STRUCT_AS() : this(biosigPINVOKE.new_HDR_STRUCT_AS(), true) {
  }

}

}
